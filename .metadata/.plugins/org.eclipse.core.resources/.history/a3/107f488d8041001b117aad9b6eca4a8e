//Made with BlockBench 3.7.4
package com.tsarhydrantine.tsbase.tsItems.tsToolAndArmor;

import com.mojang.blaze3d.matrix.MatrixStack;
import com.mojang.blaze3d.vertex.IVertexBuilder;

import net.minecraft.client.renderer.entity.model.EntityModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class FruitcakeArmorModel extends EntityModel<Entity> {
	private final ModelRenderer Head;
	private final ModelRenderer Fruit_r1;
	private final ModelRenderer Fruit_r2;
	private final ModelRenderer Body;
	private final ModelRenderer Fruit_r3;
	private final ModelRenderer Fruit_r4;
	private final ModelRenderer Fruit_r5;
	private final ModelRenderer RightArm;
	private final ModelRenderer Fruit_r6;
	private final ModelRenderer LeftArm;
	private final ModelRenderer RightLeg;
	private final ModelRenderer Fruit_r7;
	private final ModelRenderer LeftLeg;

	public FruitcakeArmorModel() {
		textureWidth = 64;
		textureHeight = 64;

		Head = new ModelRenderer(this);
		Head.setRotationPoint(0.0F, 0.0F, 0.0F);
		Head.setTextureOffset(0, 0).addBox(-4.0F, -8.0F, -4.0F, 8.0F, 8.0F, 8.0F, 1.0F, false);

		Fruit_r1 = new ModelRenderer(this);
		Fruit_r1.setRotationPoint(-0.9674F, -8.7053F, -2.2492F);
		Head.addChild(Fruit_r1);
		setRotationAngle(Fruit_r1, -0.4363F, 0.6109F, -1.5708F);
		Fruit_r1.setTextureOffset(0, 56).addBox(-2.0F, -2.0F, -2.0F, 4.0F, 4.0F, 4.0F, -1.0F, false);

		Fruit_r2 = new ModelRenderer(this);
		Fruit_r2.setRotationPoint(-3.0F, -7.0F, 0.0F);
		Head.addChild(Fruit_r2);
		setRotationAngle(Fruit_r2, -0.2618F, -0.3491F, -1.5708F);
		Fruit_r2.setTextureOffset(16, 56).addBox(-3.0F, -4.0F, 0.0F, 4.0F, 4.0F, 4.0F, -1.0F, false);

		Body = new ModelRenderer(this);
		Body.setRotationPoint(0.0F, 0.0F, 0.0F);
		Body.setTextureOffset(16, 16).addBox(-4.0F, 0.0F, -2.0F, 8.0F, 12.0F, 4.0F, 1.01F, false);

		Fruit_r3 = new ModelRenderer(this);
		Fruit_r3.setRotationPoint(2.0F, 9.0F, 1.0F);
		Body.addChild(Fruit_r3);
		setRotationAngle(Fruit_r3, -0.2618F, -0.7418F, 0.0F);
		Fruit_r3.setTextureOffset(14, 47).addBox(-2.0F, -5.0F, 0.0F, 3.0F, 5.0F, 4.0F, -1.0F, false);

		Fruit_r4 = new ModelRenderer(this);
		Fruit_r4.setRotationPoint(-3.0832F, 5.111F, 2.8996F);
		Body.addChild(Fruit_r4);
		setRotationAngle(Fruit_r4, -0.3491F, 1.1345F, -2.3998F);
		Fruit_r4.setTextureOffset(0, 47).addBox(-1.4168F, -2.111F, -2.3996F, 3.0F, 5.0F, 4.0F, -1.0F, false);

		Fruit_r5 = new ModelRenderer(this);
		Fruit_r5.setRotationPoint(-1.0832F, 4.111F, -2.6004F);
		Body.addChild(Fruit_r5);
		setRotationAngle(Fruit_r5, -0.3927F, -0.3927F, 1.6144F);
		Fruit_r5.setTextureOffset(14, 47).addBox(-1.5F, -2.5F, -2.0F, 3.0F, 5.0F, 4.0F, -1.0F, false);

		RightArm = new ModelRenderer(this);
		RightArm.setRotationPoint(-5.0F, 2.0F, 0.0F);
		RightArm.setTextureOffset(40, 16).addBox(-3.0F, -2.0F, -2.0F, 4.0F, 12.0F, 4.0F, 1.0F, false);

		Fruit_r6 = new ModelRenderer(this);
		Fruit_r6.setRotationPoint(-1.4142F, -1.2225F, -3.0403F);
		RightArm.addChild(Fruit_r6);
		setRotationAngle(Fruit_r6, -0.6981F, -0.8727F, -1.5708F);
		Fruit_r6.setTextureOffset(0, 56).addBox(-2.0F, -2.0F, -2.0F, 4.0F, 4.0F, 4.0F, -1.0F, false);

		LeftArm = new ModelRenderer(this);
		LeftArm.setRotationPoint(5.0F, 2.0F, 0.0F);
		LeftArm.setTextureOffset(40, 16).addBox(-1.0F, -2.0F, -2.0F, 4.0F, 12.0F, 4.0F, 1.0F, true);

		RightLeg = new ModelRenderer(this);
		RightLeg.setRotationPoint(-1.9F, 12.0F, 0.0F);
		RightLeg.setTextureOffset(0, 16).addBox(-2.0F, 0.0F, -2.0F, 4.0F, 12.0F, 4.0F, 1.0F, false);

		Fruit_r7 = new ModelRenderer(this);
		Fruit_r7.setRotationPoint(-1.1F, 8.0F, -5.0F);
		RightLeg.addChild(Fruit_r7);
		setRotationAngle(Fruit_r7, -1.0036F, -0.3491F, -1.5708F);
		Fruit_r7.setTextureOffset(14, 47).addBox(-2.0F, -5.0F, 0.0F, 3.0F, 5.0F, 4.0F, -1.0F, false);

		LeftLeg = new ModelRenderer(this);
		LeftLeg.setRotationPoint(1.9F, 12.0F, 0.0F);
		LeftLeg.setTextureOffset(0, 16).addBox(-2.0F, 0.0F, -2.0F, 4.0F, 12.0F, 4.0F, 1.0F, true);
	}

	@Override
	public void setRotationAngles(Entity entity, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch){
		//previously the render function, render code was moved to a method below
	}

	@Override
	public void render(MatrixStack matrixStack, IVertexBuilder buffer, int packedLight, int packedOverlay, float red, float green, float blue, float alpha){
		Head.render(matrixStack, buffer, packedLight, packedOverlay);
		Body.render(matrixStack, buffer, packedLight, packedOverlay);
		RightArm.render(matrixStack, buffer, packedLight, packedOverlay);
		LeftArm.render(matrixStack, buffer, packedLight, packedOverlay);
		RightLeg.render(matrixStack, buffer, packedLight, packedOverlay);
		LeftLeg.render(matrixStack, buffer, packedLight, packedOverlay);
	}

	public void setRotationAngle(ModelRenderer modelRenderer, float x, float y, float z) {
		modelRenderer.rotateAngleX = x;
		modelRenderer.rotateAngleY = y;
		modelRenderer.rotateAngleZ = z;
	}
}